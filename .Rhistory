tmp_df$prob <- unlist(tt)
tmp_df$created_at <- format(tmp_df$created_at, "%Y")
tmp_df$created_at <- format(tmp_df$created_at, "%Y")
head(tmp_df$created_at)
tmp_df$created_at <- format(tmp_df$created_at, "%y")
tmp_df <- df[rep(seq_len(nrow(df)), each = k), ]
tmp_df$topic <- paste("Topic", rep(1:k,  nrow(df)))
tt <- list()
for(i in 1:nrow(doc.topics.m)){
tt[[i]] <- doc.topics.m[i,]
}
tmp_df$prob <- unlist(tt)
tmp_df$created_at <- format(tmp_df$created_at, "%y")
tmp_df$created_at <- format(time(tmp_df$created_at), "%y")
tmp_df$created_at <-  as.Date(time(tmp_df$created_at), "%y")
tmp_df$created_at <-  as.Date(tmp_df$created_at, "%y")
head(tmp_df$created_at)
tmp_df$created_at <-  as.Date(tmp_df$created_at, "%Y")
head(tmp_df$created_at)
tmp_df <- df[rep(seq_len(nrow(df)), each = k), ]
tmp_df$topic <- paste("Topic", rep(1:k,  nrow(df)))
tt <- list()
for(i in 1:nrow(doc.topics.m)){
tt[[i]] <- doc.topics.m[i,]
}
tmp_df$prob <- unlist(tt)
format(tmp_df$created_at, "%y")
format(tmp_df$created_at, "/%Y")
format(tmp_df$created_at, "%m/%Y")
format(as.Date(tmp_df$created_at), "%m/%Y")
tmp_df$created_at <- format(as.Date(tmp_df$created_at), "%Y")
year_topic <- tmp_df  %>%
group_by(created_at, topic) %>%
count(created_at, topic) %>%
select(created_at, topic, number = n)
View(year_topic)
year_topic <- tmp_df  %>%
group_by(created_at, topic) %>%
count(created_at, topic) %>%
select(created_at, topic, year_prob = n)
View(tmp_df)
year_topic <- tmp_df  %>%
group_by(created_at, topic) %>%
count(created_at, topic) %>%
mutate(prob = colSums(prob)) %>%
select(created_at, topic, year_prob = n)
tmp_df[, sum(prob), by = list(created_at, topic)]
year_topic <- tmp_df  %>%
group_by(created_at, topic) %>%
count(created_at, topic) %>%
sum(prob, by = list(created_at, topic))
tmp_df %>%
# assign a row number for later grouping
mutate(rn=row_number())
test <-
tmp_df %>%
# assign a row number for later grouping
mutate(rn=row_number()) %>%
# make into a tall data frame, with rn as the row key
melt(id.vars = "rn") %>%
# calculate the row suffix for grouping
mutate(suffix = str_extract(topic, "\\d+")) %>%
# put it back into a dataframe, summing value (could use acast if you want an array)
dcast(rn ~ suffix, value.var="value", fun.aggregate = sum)
library(reshape2)
test <-
tmp_df %>%
# assign a row number for later grouping
mutate(rn=row_number()) %>%
# make into a tall data frame, with rn as the row key
melt(id.vars = "rn") %>%
# calculate the row suffix for grouping
mutate(suffix = str_extract(topic, "\\d+")) %>%
# put it back into a dataframe, summing value (could use acast if you want an array)
dcast(rn ~ suffix, value.var="value", fun.aggregate = sum)
test <-
tmp_df %>%
# assign a row number for later grouping
mutate(rn=row_number()) %>%
# make into a tall data frame, with rn as the row key
melt(id.vars = "rn") %>%
# calculate the row suffix for grouping
mutate(suffix = str_extract(topic, created_at))
test <-
tmp_df %>%
# assign a row number for later grouping
mutate(rn=row_number()) %>%
# make into a tall data frame, with rn as the row key
melt(id.vars = "rn")
test <-
tmp_df %>%
# assign a row number for later grouping
mutate(rn=row_number())
test <-
tmp_df %>%
# assign a row number for later grouping
mutate(rn=row_number()) %>%
# make into a tall data frame, with rn as the row key
melt(id.vars = "rn")
tmp_df[, sum(prob), by = list("created_at", "topic")]
tmp_df[, sum(prob), by = list(created_at,topic)]
tmp_df[, sum(prob), by = list(tmp_df$created_at,tmp_df$topic)]
library(data.table)
tmp_df[, sum(prob), by = list(tmp_df$created_at,tmp_df$topic)]
tmp_df[, sum(prob), by = list(created_at,topic)]
tmp_df[, sum(prob)]
tmp_df[, sum(tmp_dfprob)]
tmp_df[, sum(tmp_df$prob)]
tmp_df[, sum(tmp_df$prob)]
tmp_df[, sum(tmp_df$prob),]
tmp_df[ sum(tmp_df$prob),]
tmp_df[ sum(prob), by = list(created_at,topic)]
View(tmp_df[ sum(tmp_df$prob),])
tmp_df[, sum(prob), by = list(created_at,topic)]
tmp_df %>%
mutate(ones = rowSums(select(., grep(".1", names(.), value = TRUE))),
twos = rowSums(select(., grep(".2", names(.), value = TRUE)))) %>%
select(ones, twos)
View(tmp_df %>%
mutate(ones = rowSums(select(., grep(".1", names(.), value = TRUE))),
twos = rowSums(select(., grep(".2", names(.), value = TRUE)))) %>%
select(ones, twos))
sum(tmp_df$prob)
sum()
?sum
tmp_df[ sum(prob), by = c(created_at,topic)]
tmp_df[, sum(prob), by = c(created_at,topic)]
tmp_df[ sum(prob), by = c(created_at,topic)]
tmp_df[ sum(prob), by = list(created_at,topic)]
df <- data.frame(
A.1 = 1:5,
B.1 = 6:10,
C.2 = 11:15,
D.2 = 16:20
)
df
library(data.table)
setDT(df)
df[, row_number := 1:.N]
df
df_long <- melt(df, id.vars = "row_number")
df_long
df_long[, group := as.integer(gsub("^.*?\\.", "", variable))]
df_long
class(tmp_df$topic)
df_long[, sum(value), by = list(row_number, group)]
class(df_long$row_number)
class(df_long$group)
tmp_df$created_at <- as.integer(tmp_df$created_at)
tmp_df$topic <- as.integer(tmp_df$topic)
tmp_df[, sum(prob), by = list(created_at,topic)]
class(tmp_df$prob)
class(df_long$value)
tmp_df$prob <- as.integer(tmp_df$prob)
tmp_df[, sum(prob), by = list(created_at,topic)]
View(tmp_df)
tmp_df <- df[rep(seq_len(nrow(df)), each = k), ]
tmp_df$topic <- paste("Topic", rep(1:k,  nrow(df)))
tt <- list()
for(i in 1:nrow(doc.topics.m)){
tt[[i]] <- doc.topics.m[i,]
}
tmp_df$prob <- unlist(tt)
tmp_df$created_at <- format(as.Date(tmp_df$created_at), "%Y")
tmp_df <- df[rep(seq_len(nrow(df)), each = k), ]
tmp_df$topic <- paste("Topic", rep(1:k,  nrow(df)))
tt <- list()
for(i in 1:nrow(doc.topics.m)){
tt[[i]] <- doc.topics.m[i,]
}
tmp_df$prob <- unlist(tt)
tmp_df$created_at <- format(as.Date(tmp_df$created_at), "%Y")
tt <- list()
for(i in 1:nrow(doc.topics.m)){
tt[[i]] <- doc.topics.m[i,]
}
tmp_df$prob <- unlist(tt)
df <- df_2
tmp_df <- df[rep(seq_len(nrow(df)), each = k), ]
tmp_df$topic <- paste("Topic", rep(1:k,  nrow(df)))
tt <- list()
for(i in 1:nrow(doc.topics.m)){
tt[[i]] <- doc.topics.m[i,]
}
tmp_df$prob <- unlist(tt)
tmp_df$created_at <- format(as.Date(tmp_df$created_at), "%Y")
year_topic <- tmp_df  %>%
group_by(created_at, topic) %>%
count(created_at, topic) %>%
dcast(created_at ~ topic, value.var="prob", fun.aggregate = sum)
setDT(tmp_df)
year_topic <- tmp_df  %>%
group_by(created_at, topic) %>%
count(created_at, topic) %>%
mutate(suffix = str_extract(created_at, "\\d+"))
View(year_topic)
year_topic <- tmp_df  %>%
group_by(created_at, topic) %>%
count(created_at, topic) %>%
mutate(suffix = str_extract(created_at, "\\d+")) %>%
dcast(created_at ~ suffix, value.var="prob", fun.aggregate = sum)
year_topic <- tmp_df  %>%
group_by(created_at, topic) %>%
count(created_at, topic) %>%
mutate(suffix = str_extract(created_at, "\\d+")) %>%
dcast(topic ~ suffix, value.var="prob", fun.aggregate = sum)
year_topic <- tmp_df  %>%
group_by(created_at, topic) %>%
count(created_at, topic) %>%
mutate(suffix = str_extract(created_at, "\\d+")) %>%
dcast(topic ~ suffix, value.var=prob, fun.aggregate = sum)
year_topic <- tmp_df  %>%
group_by(created_at, topic) %>%
count(created_at, topic) %>%
dcast(topic ~ created_at, value.var=prob, fun.aggregate = sum)
tmp_df$prob <- as.intergar(unlist(tt))
tmp_df$prob <- as.integer(unlist(tt))
year_topic <- tmp_df  %>%
group_by(created_at, topic) %>%
count(created_at, topic) %>%
dcast(topic ~ created_at, value.var= prob, fun.aggregate = sum)
year_topic <- tmp_df  %>%
group_by(created_at, topic) %>%
count(created_at, topic) %>%
dcast(.,topic ~ created_at, value.var= prob, fun.aggregate = sum)
year_topic <- tmp_df  %>%
group_by(created_at, topic) %>%
count(created_at, topic) %>%
dcast(.,topic ~ created_at, value.var= "prob", fun.aggregate = sum)
aggregate(tmp_df,list(created_at,topic),sum)
tapply(tmp_df, list(group[row(tmp_df)], col(topic)), sum)
tapply(tmp_df, list(topic[row(tmp_df)], col(topic)), sum)
x <- matrix(runif(100), ncol=5)
group <- sample(1:8, 20, T)
x
group
xsum <- rowsum(x, group)
xxsum
xxsum
xsum
View(tmp_2)
year_topic <- tmp_df  %>%
group_by(created_at, topic) %>%
count(created_at, topic) %>%
rowSums(prob, list(created_at, topic))
year_topic <- tmp_df  %>%
group_by(created_at, topic) %>%
count(created_at, topic) %>%
rowSums(prob, c(created_at, topic))
year_topic <- tmp_df  %>%
group_by(created_at, topic) %>%
count(created_at, topic) %>%
rowSums(created_at, topic)
year_topic <- tmp_df  %>%
group_by(created_at, topic) %>%
count(created_at, topic) %>%
rowSums(.,created_at, topic)
year_topic <- tmp_df  %>%
group_by(created_at, topic) %>%
count(created_at, topic) %>%
rowSums(prob,created_at, topic)
aggregate(x = tmp_df$prob,                # Specify data column
by = list(tmp_df$topic),              # Specify group indicator
FUN = sum)
aggregate(x = tmp_df$prob,                # Specify data column
by = list(tmp_df$topic, tmp_df$created_at),              # Specify group indicator
FUN = sum)
tmp_df$prob[1]
tmp_df$prob[2]
tmp_df$prob <- unlist(tt)
year_topic <- tmp_df  %>%
group_by(created_at, topic) %>%
count(created_at, topic) %>%
aggregate(x = prob,                # Specify data column
by = list(topic, created_at),              # Specify group indicator
FUN = sum)
aggregate(x = tmp_df$prob,                # Specify data column
by = list(tmp_df$topic, tmp_df$created_at),              # Specify group indicator
FUN = sum)
year_topic <- tmp_df  %>%
group_by(created_at, topic) %>%
count(created_at, topic) %>%
aggregate(prob = tmp_df$prob,                # Specify data column
by = list(tmp_df$topic, tmp_df$created_at),              # Specify group indicator
FUN = sum)
year_prob <- data.frame(aggregate(prob = tmp_df$prob,                # Specify data column
by = list(tmp_df$topic, tmp_df$created_at),              # Specify group indicator
FUN = sum))
year_prob <- as.data.frame(aggregate(prob = tmp_df$prob,                # Specify data column
by = list(tmp_df$topic, tmp_df$created_at),              # Specify group indicator
FUN = sum))
year_prob <- aggregate(prob = tmp_df$prob,                # Specify data column
by = list(tmp_df$topic, tmp_df$created_at),              # Specify group indicator
FUN = sum)
aggregate(prob = tmp_df$prob,                # Specify data column
by = list(tmp_df$topic, tmp_df$created_at),              # Specify group indicator
FUN = sum)
aggregate(prob = tmp_df$prob,                # Specify data column
by = list(tmp_df$topic, tmp_df$created_at),              # Specify group indicator
FUN = sum)
year_prob <- aggregate(x = tmp_df$prob,                # Specify data column
by = list(tmp_df$topic, tmp_df$created_at),              # Specify group indicator
FUN = sum)
year_topic$prob <- year_prob$x
View(year_topic)
year_topic <- tmp_df  %>%
group_by(created_at, topic) %>%
count(created_at, topic) %>%
mutate(prob = year_prob$x,
percent = prob/year_topic_n) %>%
select(created_at, topic, year_topic_n = n)
year_prob <- aggregate(x = tmp_df$prob,                # Specify data column
by = list(tmp_df$topic, tmp_df$created_at),              # Specify group indicator
FUN = sum)
year_topic <- tmp_df  %>%
group_by(created_at, topic) %>%
count(created_at, topic) %>%
mutate(prob = year_prob$x)
year_topic <- tmp_df  %>%
group_by(created_at, topic) %>%
count(created_at, topic) %>%
select(created_at, topic, year_topic_n = n)
year_topic$percent <- year_topic$prob / year_topic$year_topic_n *100
year_topic$prob <- year_prob$x
year_topic$percent <- year_topic$prob / year_topic$year_topic_n *100
col <- col2rgb(c("peachpuff", "royalblue", "tomato", "#B4CF68", "green", "purple", "orange","grey","red","#8DD3C7" , "pink", "blue","gold"))
#Join the two and create a percent field
year_radar_chart <- year_topic %>%
select(-year_prob, -prob) %>%
spread(created_at, percent) %>%
chartJSRadar(showToolTipLabel = TRUE,
main = "NRC video Radar", colMatrix =col)
View(year_topic)
year_radar_chart <- year_topic %>%
select(-year_topic_n, -prob) %>%
spread(created_at, percent) %>%
chartJSRadar(showToolTipLabel = TRUE,
main = "NRC video Radar", colMatrix =col)
print(year_radar_chart)
year_radar_chart <- year_topic %>%
select(-year_topic_n, -prob) %>%
spread(created_at, percent) %>%
chartJSRadar(showToolTipLabel = TRUE,
main = "Topic Radar", colMatrix =col)
print(year_radar_chart)
#create function that accepts the lda model and num word to display
topic_radarmap <- function(df ,mallet_df, k) {
doc.topics.m <- mallet.doc.topics(mallet_df, smoothed=T,
normalized=T)
tmp_df <- df[rep(seq_len(nrow(df)), each = k), ]
#tmp_df$topic <- paste("Topic", rep(1:k,  nrow(df)))
tt <- list()
for(i in 1:nrow(doc.topics.m)){
tt[[i]] <- doc.topics.m[i,]
}
tmp_df$prob <- unlist(tt)
tmp_df$created_at <- format(as.Date(tmp_df$created_at), "%Y")
year_prob <- aggregate(x = tmp_df$prob,                # Specify data column
by = list(tmp_df$topic, tmp_df$created_at),              # Specify group indicator
FUN = sum)
year_topic <- tmp_df  %>%
group_by(created_at, topic) %>%
count(created_at, topic) %>%
select(created_at, topic, year_topic_n = n)
year_topic$prob <- year_prob$x
year_topic$percent <- year_topic$prob / year_topic$year_topic_n *100
col <- col2rgb(c("peachpuff", "royalblue", "tomato", "#B4CF68", "green", "purple", "orange","grey","red","#8DD3C7" , "pink", "blue","gold"))
#Join the two and create a percent field
year_radar_chart <- year_topic %>%
select(-year_topic_n, -prob) %>%
spread(created_at, percent) %>%
chartJSRadar(showToolTipLabel = TRUE,
main = "Topic Radar", colMatrix =col)
print(year_radar_chart)
}
topic_radarmap(df_2, mallet_df_2)
df <- df_2
mallet_df <- mallet_df_2
doc.topics.m <- mallet.doc.topics(mallet_df, smoothed=T,
normalized=T)
tmp_df <- df[rep(seq_len(nrow(df)), each = k), ]
tt <- list()
for(i in 1:nrow(doc.topics.m)){
tt[[i]] <- doc.topics.m[i,]
}
tmp_df$prob <- unlist(tt)
tmp_df$created_at <- format(as.Date(tmp_df$created_at), "%Y")
year_prob <- aggregate(x = tmp_df$prob,                # Specify data column
by = list(tmp_df$topic, tmp_df$created_at),              # Specify group indicator
FUN = sum)
aggregate(x = tmp_df$prob,                # Specify data column
by = list(tmp_df$topic, tmp_df$created_at),              # Specify group indicator
FUN = sum)
View(tmp_df)
#create function that accepts the lda model and num word to display
topic_radarmap <- function(df ,mallet_df, k) {
doc.topics.m <- mallet.doc.topics(mallet_df, smoothed=T,
normalized=T)
tmp_df <- df[rep(seq_len(nrow(df)), each = k), ]
#tmp_df$topic <- paste("Topic", rep(1:k,  nrow(df)))
tt <- list()
for(i in 1:nrow(doc.topics.m)){
tt[[i]] <- doc.topics.m[i,]
}
tmp_df$prob <- unlist(tt)
tmp_df$topic <- paste("Topic", rep(1:k,  nrow(df)))
tmp_df$created_at <- format(as.Date(tmp_df$created_at), "%Y")
year_prob <- aggregate(x = tmp_df$prob,                # Specify data column
by = list(tmp_df$topic, tmp_df$created_at),              # Specify group indicator
FUN = sum)
year_topic <- tmp_df  %>%
group_by(created_at, topic) %>%
count(created_at, topic) %>%
select(created_at, topic, year_topic_n = n)
year_topic$prob <- year_prob$x
year_topic$percent <- year_topic$prob / year_topic$year_topic_n *100
col <- col2rgb(c("peachpuff", "royalblue", "tomato", "#B4CF68", "green", "purple", "orange","grey","red","#8DD3C7" , "pink", "blue","gold"))
#Join the two and create a percent field
year_radar_chart <- year_topic %>%
select(-year_topic_n, -prob) %>%
spread(created_at, percent) %>%
chartJSRadar(showToolTipLabel = TRUE,
main = "Topic Radar", colMatrix =col)
print(year_radar_chart)
}
topic_radarmap(df, mallet_df, 7)
doc_topics_tidy <- melt(doc.topics.m,
id=c("V1:20"),
variable_name = "Frequency")
head(doc_topics_tidy)
ggplot(data = doc_topics_tidy, aes(x = X1, y = value, stat = "identity")) +
geom_density(stat = "identity", position = "identity") + facet_wrap(~X2) + ylab("Frequency") + xlab("Tract") + ggtitle("Frequency of Topic Models in Tracts for the Times")
#create function that accepts the lda model and num word to display
topic_wordplot <- function(mallet_df, k, num_words = 10) {
topic.words <- mallet.topic.words(mallet_df, smoothed = T, normalized = T)
mallet_words_list <- list()
for (i in 1:as.numeric(k)) {
mallet_words_list[[i]] <- mallet.top.words(mallet_df, topic.words[i,], 100)
}
topic_mallet_list <- mallet_words_list
topic_word <- list.cbind(topic_mallet_list)
## top num_words words per topic
sort <- list()
for(i in 1:k*2-1){
sort[[i]] <- c(i,i+1)
}
sort <- do.call(rbind,sort)
tt <- list()
for(i in 1:nrow(sort)){
tt[[i]] <- cbind(topic = paste("Topic", i), topic_word[,c(sort[i,])])
}
topics_tidy <- do.call(rbind.data.frame, tt)
theme_lyrics <- function(aticks = element_blank(),
pgminor = element_blank(),
lt = element_blank(),
lp = "none")
{
theme(plot.title = element_text(hjust = 0.5), #center the title
axis.ticks = aticks, #set axis ticks to on or off
panel.grid.minor = pgminor, #turn on or off the minor grid lines
legend.title = lt, #turn on or off the legend title
legend.position = lp) #turn on or off the legend
}
word_chart <- function(data, input, title) {
data %>%
#set y = 1 to just plot one variable and use word as the label
ggplot(aes(as.factor(row), 1, label = input, fill = factor(topic) )) +
#you want the words, not the points
geom_point(color = "transparent") +
#make sure the labels don't overlap
geom_label_repel(nudge_x = .2,
direction = "y",
box.padding = 0.1,
segment.color = "transparent",
size = 3) +
facet_grid(~topic) +
theme_lyrics() +
theme(axis.text.y = element_blank(), axis.text.x = element_blank(),
#axis.title.x = element_text(size = 9),
panel.grid = element_blank(), panel.background = element_blank(),
panel.border = element_rect("lightgray", fill = NA),
strip.text.x = element_text(size = 9)) +
labs(x = NULL, y = NULL, title = title) +
#xlab(NULL) + ylab(NULL) +
#ggtitle(title) +
coord_flip()
}
top_terms <- topics_tidy %>%
group_by(topic) %>%
arrange(topic, desc(weights)) %>%
#get the top num_words PER topic
slice(seq_len(num_words)) %>%
arrange(topic, weights) %>%
#row is required for the word_chart() function
mutate(row = row_number()) %>%
ungroup()
#create a title to pass to word_chart
title <- paste("Mallet Top",num_words  ,"Terms for", k, "Topics")
#call the word_chart function you built in prep work
word_chart(top_terms, top_terms$words, title)
}
topic_wordplot(mallet_df_1, k = 7, 10)
##topic_wordsplot
library(dplyr)
library(tidytext)
library(mallet)
topic_wordplot(mallet_df_1, k = 7, 10)
library(rlist)
topic_wordplot(mallet_df_1, k = 7, 10)
library(ggrepel)
topic_wordplot(mallet_df_1, k = 7, 10)
library(ComTxt)
